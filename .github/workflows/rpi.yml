name: Chalet Multiplatform

on: [push, pull_request]

env: 
  CMAKE_CXX_COMPILER_LAUNCHER: ccache


jobs:
  rpi-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration:
        - { libs: armv6l, multistrap_arch: armhf, suffix: arm-linux-gnueabihf }
        - { libs: armv7l, multistrap_arch: armhf, suffix: arm-linux-gnueabihf }
        - { libs: aarch64, multistrap_arch: arm64, suffix: aarch64-linux-gnu }
    env:
      CMAKE_SYSTEM_NAME: Linux
      CMAKE_SYSTEM_PROCESSOR: ARM
      TOOLCHAIN_PREFIX: ${{matrix.configuration.suffix}}
      CMAKE_C_COMPILER: gcc-${TOOLCHAIN_PREFIX}
      CMAKE_ASM_COMPILER: gcc-${TOOLCHAIN_PREFIX}
      CMAKE_CXX_COMPILER: g++-${TOOLCHAIN_PREFIX}
      CMAKE_SYSROOT: ./raspbian
      MULTISTRAP_ARCH: ${{matrix.configuration.multistrap_arch}}
    steps:

    - name: Cache Packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: multistrap unzip gcc-${{matrix.configuration.suffix}} g++-${{matrix.configuration.suffix}}
        # version: 1.0

    - name: Install Multistrap
      shell: bash
      run: |
        mkdir -p raspbian/etc/apt/apt.conf.d/
        echo 'Acquire::AllowInsecureRepositories "true";' | sudo tee raspbian/etc/apt/apt.conf.d/90insecure

        if [[ ${MULTISTRAP_ARCH} == "armhf" ]]; then
        git clone https://github.com/raspberrypi/userland --depth 1 raspbian/userland
        fi

        multistrap -a ${{matrix.configuration.multistrap_arch}} -d ./raspbian -f ./multistrap.conf   



    - uses: actions/checkout@v4
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.14
      with:
        key: ${{ matrix.configuration.suffix }}

    - name: Install Chalet
      uses: jaxxstorm/action-install-gh-release@v1.13.0
      with: 
        repo: chalet-org/chalet
        cache: enable
        extension: "\\.zip"
        prerelease: "true"

    - name: Get Path
      shell: bash
      run: |
        echo $GITHUB_PATH

    - name: Chalet Test / Version
      shell: bash
      run: |
        chalet --version

    - uses: actions/checkout@v4

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.14
      with:
        # key: ${{ matrix.os }}-ccache
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('*.json') }}

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@master


    - name: Cache Chalet
      id: cache-chalet
      uses: actions/cache@v4
      with:
        path: |
          ./chalet_external/**
          ./build/**
        # key: ${ matrix.os }-chaletcache
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('*.json') }}

    - name: Chalet Bundle
      shell: bash
      run: |
        chalet bundle

    - name: LS
      shell: bash
      run: ls -alR

    - name: Release
      uses: softprops/action-gh-release@v2.0.8
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      with:
        files: ./dist/*.zip
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: false                